# This is a basic workflow to help you get started with Actions

name: Build Android APK

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      branches:
        description: "Write branch you want to build"
        required: true
        type: string
      environment:
        description: "Choose environment you want to build"
        required: true
        options:
          - staging
          - development
          - production
        type: choice
        default: "development"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Setting:
    name: Setting Environment
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set Test Variable
        id: set-variable
        run: |
          if [ ${{ github.event.inputs.environment }} == 'development' ]; then
              echo "Build APK with development environment"
              echo "assemble=assembleDevelopmentDebug" >> $GITHUB_ENV
              echo "apk=app-development-debug" >> $GITHUB_ENV
              echo "folder=development" >> $GITHUB_ENV 
            
          elif [ ${{ github.event.inputs.environment }} == 'production' ]; then
              echo "Build APK with production environment"
              echo "assemble=assembleProductionDebug" >> $GITHUB_ENV
              echo "apk=app-production-debug" >> $GITHUB_ENV
              echo "folder=production" >> $GITHUB_ENV
          else
              echo "Build APK with staging environment"
              echo "assemble=assembleStagingDebug" >> $GITHUB_ENV
              echo "apk=app-staging-debug" >> $GITHUB_ENV
              echo "folder=staging" >> $GITHUB_ENV
          fi
        shell: bash
      - name: Read exported variable
        run: |
          echo "ENV: ${{ env.assemble }}"
          echo "APK: ${{ env.apk }}.apk"
          echo "Folder: ${{ env.folder }}"
      - name: Download Java SDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "zulu" # See 'Supported distributions' for available options
          java-version: "11.0.4"
      # Runs a single command using the runners shell
      - name: Install npm dependencies
        run: yarn
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
    outputs:
      assemble: ${{ env.assemble }}
      apk: ${{ env.apk }}
      folder: ${{ env.folder }}

  Check:
    runs-on: ubuntu-latest
    name: Checking Lint
    needs: [Setting]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Checking Lint
        run: yarn lint --fix
  Build:
    runs-on: ubuntu-latest
    name: Building APK
    needs: [Setting, Check]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Clean android build
        run: cd android && ./gradlew clean && cd ..

      - name: Build Android Debug
        run: cd android && ENVFILE=.env.${{ github.event.inputs.environment }} && ./gradlew ${{needs.Setting.outputs.assemble}}

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: boilerplate
          path: android/app/build/outputs/apk/${{needs.Setting.outputs.folder}}/debug/${{needs.Setting.outputs.apk}}.apk
          retention-days: 1
  Upload:
    name: Upload to Google Drive
    needs: [Setting, Check, Build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Retrieve saved APK File
        uses: actions/download-artifact@v2
        with:
          name: boilerplate
          path: android/app/build/outputs/apk/${{needs.Setting.outputs.folder}}/debug

      - name: Archive files
        run: |
          sudo apt-get update
          sudo apt-get install zip
          mv android/app/build/outputs/apk/${{needs.Setting.outputs.folder}}/debug/${{needs.Setting.outputs.apk}}.apk .
          zip -r archive.zip ${{needs.Setting.outputs.apk}}.apk
          rm ${{needs.Setting.outputs.apk}}.apk
      - name: Upload to gdrive
        uses: adityak74/google-drive-upload-git-action@main
        with:
          credentials: ${{ secrets.CREDENTIALS }}
          filename: "archive.zip"
          folderId: ${{ secrets.FOLDERID }}
          name: "${{ github.event.inputs.environment }}-${{ github.event.inputs.branches }}.zip" # optional string
          overwrite: "true" # optional boolean
